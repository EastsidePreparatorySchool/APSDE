output <- 0
orgin <- input
for(i in 1:trades){
input <- input*1.0015
if((input/2) >= orgin){
profittt = profittt + (input /2)
input = input/2
output[i] <- input
}
output[i] <- input
}
plot(output, type="l", col="blue", main = paste("Widthdrawprofit:", (profittt + input - orgin), "Standard Profit: ", (input*(1.0015^x[length(x)])- input)))
}
widthdrawcalc(1000,96)
widthdrawcalc <- function(input, trades){
x <- 1:trades
profittt <- 0
output <- 0
orgin <- input
for(i in 1:trades){
input <- input*1.0015
if((input/2) >= orgin){
profittt = profittt + (input /2)
input = input/2
output[i] <- input
}
output[i] <- input
}
plot(output, type="l", col="blue", main = paste("Widthdrawprofit:", (profittt + input - orgin), "Standard Profit: ", (orgin*(1.0015^x[length(x)])- orgin)))
}
widthdrawcalc(1000,96)
widthdrawcalc(1000,192)
widthdrawcalc(1000,2880)
calprofit(1000,96)
widthdrawcalc <- function(input, trades){
x <- 1:trades
profittt <- 0
output <- 0
orgin <- input
for(i in 1:trades){
input <- input*1.0015
if((input/2) >= orgin){
profittt = profittt + (input /2)
input = input/2
output[i] <- input
}
output[i] <- input
}
plot(output, type="l", col="blue", main = paste("Widthdrawprofit:", (profittt + input - orgin), "Standard Profit: ", (orgin*(1.0015^x[length(x)])- orgin)), xlab = "# of Trades", ylab = "USD")
}
widthdrawcalc(1000, 96)
7175 * 12
saftywidthdraws <- funciton(input, trades){
amountD <- (input*(1.0015^96)- input) * 365
amountW <- (input*(1.0015^192)- input) * 52
amountM <- (input*(1.0015^2880)- input) * 12
amountY <- (input*(1.0015^35040)- input)
}
saftywidthdraws <- funciton(input, trades){
amountD <- (input*(1.0015^96)- input) * 365
amountW <- (input*(1.0015^192)- input) * 52
amountM <- (input*(1.0015^2880)- input) * 12
amountY <- (input*(1.0015^35040)- input)
cat("Day", amountD)
cat("Week", amountW)
cat("Month", amountM)
cat("Year", amountY)
}
widthdrawcalc
widthdrawcalc * 2
as.numeric(widthdrawcalc)
saftywidthdraws <- funciton(input, trades){
#amountD <- (input*(1.0015^96)- input) * 365
#amountW <- (input*(1.0015^192)- input) * 52
#amountM <- (input*(1.0015^2880)- input) * 12
#amountY <- (input*(1.0015^35040)- input)
#cat("Day", amountD)
#cat("Week", amountW)
#cat("Month", amountM)
#cat("Year", amountY)
}
saftywidthdraws <- funciton(input, trades){}
saftywidthdraws <- funciton(input, trades){return("hi")}
saftywidthdraws <- funciton(input, trades){return("hi")}
}
saftywidthdraws <- funtion(input, trades){return("hi")}
saftywidthdraws <- function(input, trades){return("hi")}
saftywidthdraws <- function(input, trades){
amountD <- (input*(1.0015^96)- input) * 365
amountW <- (input*(1.0015^192)- input) * 52
amountM <- (input*(1.0015^2880)- input) * 12
amountY <- (input*(1.0015^35040)- input)
cat("Day", amountD)
cat("Week", amountW)
cat("Month", amountM)
cat("Year", amountY)
}
saftywidthdraws(1000, 1)
96*365
192*52
192*54
96*7
192/96
saftywidthdraws <- function(input){
amountD <- (input*(1.0015^96)- input) * 365
amountW <- (input*(1.0015^672)- input) * 52
amountM <- (input*(1.0015^2880)- input) * 12
amountY <- (input*(1.0015^35040)- input)
cat("Day", amountD)
cat(" Week", amountW)
cat(" Month", amountM)
cat(" Year", amountY)
}
saftywidthdraws(1000)
widthdrawcalc(1000,35040)
a <- 0
b <- 0
c <- 0
s <- 1000
found <- FALSE
for (a in 1:floor((s/3))) {
for (b in a:(s/2)) {
c <- s - a - b
if (a^2 + b^2 == c^2) {
found <- TRUE
break
}
}
if (found)
break
}
answer <- a * b * c
answer
a
b
c
a + b + c
Inf
install.packages("pracma")
library(pracma)
trapz(ROCsdat$FPR, ROCsdat$TPR)
plot(TPR ~ FPR, data = ROCsdat, xlim = c(0,1), ylim = c(0,1), type="b", pch = 25, bg = "black")
text(TPR ~ FPR, data = ROCsdat, pos = 3, labels = ROCsdat$cutpoint)
abline(0, 1, col="lightgrey")
ROCsdata
ROCsdat <- data.frame(cutpoint = c(-Inf, 5, 7, 9, Inf), TPR = c(0, 0.56, 0.78, 0.91, 1), FPR = c(0, 0.01, 0.19, 0.58, 1))
ROCsdat
library(pracma)
trapz(ROCsdat$FPR, ROCsdat$TPR)
plot(TPR ~ FPR, data = ROCsdat, xlim = c(0,1), ylim = c(0,1), type="b", pch = 25, bg = "black")
text(TPR ~ FPR, data = ROCsdat, pos = 3, labels = ROCsdat$cutpoint)
abline(0, 1, col="lightgrey")
## The emission vector (data in mg CH4 / m2*h) as a time series.
ghg <- ts(c(12.3, 14.7, 17.3, 13.2, 8.5, 7.7, 6.4, 3.2, 19.8,
22.3, 24.7, 15.6, 17.4), start=0, end=24, frequency=0.5)
## Have a look at the emission development.
plot(ghg)
## Calculate what has been emitted that day
## Assuming that emissions develop linearly between
## measurements
auc(time(ghg), ghg)
## The effect of below.zero:
## Shift data, so that we have negative emissions (immissions)
ghg <- ghg-10
## See the difference
plot(ghg)
abline(h=0)
## With thresh = NULL the negative emissions are subtracted
## from the positive emissions
auc(time(ghg), ghg)
## With thresh = 0 the negative emissions are set to 0
## and only the emissions >= 0 are counted.
auc(time(ghg), ghg, thresh = 0)
install.packages("flux")
## The emission vector (data in mg CH4 / m2*h) as a time series.
ghg <- ts(c(12.3, 14.7, 17.3, 13.2, 8.5, 7.7, 6.4, 3.2, 19.8,
22.3, 24.7, 15.6, 17.4), start=0, end=24, frequency=0.5)
## Have a look at the emission development.
plot(ghg)
## Calculate what has been emitted that day
## Assuming that emissions develop linearly between
## measurements
auc(time(ghg), ghg)
## The effect of below.zero:
## Shift data, so that we have negative emissions (immissions)
ghg <- ghg-10
## See the difference
plot(ghg)
abline(h=0)
## With thresh = NULL the negative emissions are subtracted
## from the positive emissions
auc(time(ghg), ghg)
## With thresh = 0 the negative emissions are set to 0
## and only the emissions >= 0 are counted.
auc(time(ghg), ghg, thresh = 0)
install.packages("auc")
install.packages("AUC")
## The emission vector (data in mg CH4 / m2*h) as a time series.
ghg <- ts(c(12.3, 14.7, 17.3, 13.2, 8.5, 7.7, 6.4, 3.2, 19.8,
22.3, 24.7, 15.6, 17.4), start=0, end=24, frequency=0.5)
## Have a look at the emission development.
plot(ghg)
## Calculate what has been emitted that day
## Assuming that emissions develop linearly between
## measurements
auc(time(ghg), ghg)
## The effect of below.zero:
## Shift data, so that we have negative emissions (immissions)
ghg <- ghg-10
## See the difference
plot(ghg)
abline(h=0)
## With thresh = NULL the negative emissions are subtracted
## from the positive emissions
auc(time(ghg), ghg)
## With thresh = 0 the negative emissions are set to 0
## and only the emissions >= 0 are counted.
auc(time(ghg), ghg, thresh = 0)
library(auc)
library(AUC)
## The emission vector (data in mg CH4 / m2*h) as a time series.
ghg <- ts(c(12.3, 14.7, 17.3, 13.2, 8.5, 7.7, 6.4, 3.2, 19.8,
22.3, 24.7, 15.6, 17.4), start=0, end=24, frequency=0.5)
## Have a look at the emission development.
plot(ghg)
## Calculate what has been emitted that day
## Assuming that emissions develop linearly between
## measurements
auc(time(ghg), ghg)
## The effect of below.zero:
## Shift data, so that we have negative emissions (immissions)
ghg <- ghg-10
## See the difference
plot(ghg)
abline(h=0)
## With thresh = NULL the negative emissions are subtracted
## from the positive emissions
auc(time(ghg), ghg)
## With thresh = 0 the negative emissions are set to 0
## and only the emissions >= 0 are counted.
auc(time(ghg), ghg, thresh = 0)
library(flux)
## The emission vector (data in mg CH4 / m2*h) as a time series.
ghg <- ts(c(12.3, 14.7, 17.3, 13.2, 8.5, 7.7, 6.4, 3.2, 19.8,
22.3, 24.7, 15.6, 17.4), start=0, end=24, frequency=0.5)
## Have a look at the emission development.
plot(ghg)
## Calculate what has been emitted that day
## Assuming that emissions develop linearly between
## measurements
auc(time(ghg), ghg)
## The effect of below.zero:
## Shift data, so that we have negative emissions (immissions)
ghg <- ghg-10
## See the difference
plot(ghg)
abline(h=0)
## With thresh = NULL the negative emissions are subtracted
## from the positive emissions
auc(time(ghg), ghg)
## With thresh = 0 the negative emissions are set to 0
## and only the emissions >= 0 are counted.
auc(time(ghg), ghg, thresh = 0)
library(AUC)
library(flux)
## The emission vector (data in mg CH4 / m2*h) as a time series.
ghg <- ts(c(12.3, 14.7, 17.3, 13.2, 8.5, 7.7, 6.4, 3.2, 119.8,
22.3, 24.7, 15.6, 17.4), start=0, end=24, frequency=0.5)
## Have a look at the emission development.
plot(ghg)
## Calculate what has been emitted that day
## Assuming that emissions develop linearly between
## measurements
auc(time(ghg), ghg)
## The effect of below.zero:
## Shift data, so that we have negative emissions (immissions)
ghg <- ghg-10
## See the difference
plot(ghg)
abline(h=0)
## With thresh = NULL the negative emissions are subtracted
## from the positive emissions
auc(time(ghg), ghg)
## With thresh = 0 the negative emissions are set to 0
## and only the emissions >= 0 are counted.
auc(time(ghg), ghg, thresh = 0)
ROCsdat <- data.frame(cutpoint = c(-Inf, 5, 7, 9, Inf), TPR = c(0, 0.56, 0.78, 0.91, 1), FPR = c(0, 0.01, 0.19, 0.58, 1))
library(pracma)
trapz(ROCsdat$FPR, ROCsdat$TPR)
plot(TPR ~ FPR, data = ROCsdat, xlim = c(0,1), ylim = c(0,1), type="b", pch = 25, bg = "black")
text(TPR ~ FPR, data = ROCsdat, pos = 3, labels = ROCsdat$cutpoint)
abline(0, 1, col="lightgrey")
##########
library(AUC)
library(flux)
## The emission vector (data in mg CH4 / m2*h) as a time series.
ghg <- ts(c(12.3, 14.7, 17.3, 13.2, 8.5, 7.7, 6.4, 3.2, 19.8,
22.3, 24.7, 15.6, 17.4), start=0, end=24, frequency=0.5)
## Have a look at the emission development.
plot(ghg)
## Calculate what has been emitted that day
## Assuming that emissions develop linearly between
## measurements
auc(time(ghg), ghg)
## The effect of below.zero:
## Shift data, so that we have negative emissions (immissions)
ghg <- ghg-10
## See the difference
plot(ghg)
abline(h=0)
## With thresh = NULL the negative emissions are subtracted
## from the positive emissions
auc(time(ghg), ghg)
## With thresh = 0 the negative emissions are set to 0
## and only the emissions >= 0 are counted.
auc(time(ghg), ghg, thresh = 0)
library(AUC)
library(flux)
## The emission vector (data in mg CH4 / m2*h) as a time series.
ghg <- ts(c(12.3, 14.7, 17.3, 13.2, 8.5, 7.7, 6.4, 3.2, 19.8,
22.3, 24.7, 15.6, 17.4), start=0, end=24, frequency=0.5)
## Have a look at the emission development.
plot(ghg)
## Calculate what has been emitted that day
## Assuming that emissions develop linearly between
## measurements
auc(time(ghg), ghg)
## The effect of below.zero:
## Shift data, so that we have negative emissions (immissions)
ghg <- ghg-10
## See the difference
plot(ghg, main = "Auc: ", auc(time(ghg), ghg), ", AUC thres =0: ", auc(time(ghg), ghg, thresh = 0))
abline(h=0)
## With thresh = NULL the negative emissions are subtracted
## from the positive emissions
auc(time(ghg), ghg)
## With thresh = 0 the negative emissions are set to 0
## and only the emissions >= 0 are counted.
auc(time(ghg), ghg, thresh = 0)
ROCsdat <- data.frame(cutpoint = c(-Inf, 5, 7, 9, Inf), TPR = c(0, 0.56, 0.78, 0.91, 1), FPR = c(0, 0.01, 0.19, 0.58, 1))
library(pracma)
trapz(ROCsdat$FPR, ROCsdat$TPR)
plot(TPR ~ FPR, data = ROCsdat, xlim = c(0,1), ylim = c(0,1), type="b", pch = 25, bg = "black")
text(TPR ~ FPR, data = ROCsdat, pos = 3, labels = ROCsdat$cutpoint)
abline(0, 1, col="lightgrey")
##########
library(AUC)
library(flux)
## The emission vector (data in mg CH4 / m2*h) as a time series.
ghg <- ts(c(12.3, 14.7, 17.3, 13.2, 8.5, 7.7, 6.4, 3.2, 19.8,
22.3, 24.7, 15.6, 17.4), start=0, end=24, frequency=0.5)
## Have a look at the emission development.
plot(ghg)
## Calculate what has been emitted that day
## Assuming that emissions develop linearly between
## measurements
auc(time(ghg), ghg)
## The effect of below.zero:
## Shift data, so that we have negative emissions (immissions)
ghg <- ghg-10
## See the difference
plot(ghg, main = paste("Auc: ", auc(time(ghg), ghg), ", AUC thres =0: ", auc(time(ghg), ghg, thresh = 0)))
abline(h=0)
## With thresh = NULL the negative emissions are subtracted
## from the positive emissions
auc(time(ghg), ghg)
## With thresh = 0 the negative emissions are set to 0
## and only the emissions >= 0 are counted.
auc(time(ghg), ghg, thresh = 0)
plot(ghg, main = paste("Auc: ", auc(time(ghg), ghg), ", AUC thres =0: ", auc(time(ghg), ghg, thresh = 0)), ylab="Data", pch=20)
abline(h=0)
plot(ghg, main = paste("Auc: ", auc(time(ghg), ghg), ", AUC thres =0: ", auc(time(ghg), ghg, thresh = 0)), ylab="Data", pch=20, col="blue")
plot(ghg, main = paste("Auc: ", auc(time(ghg), ghg), ", AUC thres =0: ", auc(time(ghg), ghg, thresh = 0)), ylab="Data", pch=20, col="blue", type ="o")
abline(h=0)
plot(ghg)
ROCsdat <- data.frame(cutpoint = c(-Inf, 5, 7, 9, Inf), TPR = c(0, 0.56, 0.78, 0.91, 1), FPR = c(0, 0.01, 0.19, 0.58, 1))
library(pracma)
trapz(ROCsdat$FPR, ROCsdat$TPR)
plot(TPR ~ FPR, data = ROCsdat, xlim = c(0,1), ylim = c(0,1), type="b", pch = 25, bg = "black")
text(TPR ~ FPR, data = ROCsdat, pos = 3, labels = ROCsdat$cutpoint)
abline(0, 1, col="lightgrey")
##########
library(AUC)
library(flux)
## The emission vector (data in mg CH4 / m2*h) as a time series.
ghg <- ts(c(12.3, 14.7, 17.3, 13.2, 8.5, 7.7, 6.4, 3.2, 19.8,
22.3, 24.7, 15.6, 17.4), start=0, end=24, frequency=0.5)
## Have a look at the emission development.
##plot(ghg)
## Calculate what has been emitted that day
## Assuming that emissions develop linearly between
## measurements
auc(time(ghg), ghg)
## The effect of below.zero:
## Shift data, so that we have negative emissions (immissions)
ghg <- ghg-10
## See the difference
plot(ghg, main = paste("Auc: ", auc(time(ghg), ghg), ", AUC thres =0: ", auc(time(ghg), ghg, thresh = 0)), ylab="Data", pch=20, col="blue", type ="o")
abline(h=0)
## With thresh = NULL the negative emissions are subtracted
## from the positive emissions
auc(time(ghg), ghg)
## With thresh = 0 the negative emissions are set to 0
## and only the emissions >= 0 are counted.
auc(time(ghg), ghg, thresh = 0)
plot(ghg, main = paste("Auc: ", auc(time(ghg), ghg), "| AUC thres =0: ", auc(time(ghg), ghg, thresh = 0)), ylab="Data", pch=20, col="blue", type ="o")
abline(h=0)
ROCsdat <- data.frame(cutpoint = c(-Inf, 5, 7, 9, Inf), TPR = c(0, 0.56, 0.78, 0.91, 1), FPR = c(0, 0.01, 0.19, 0.58, 1))
library(pracma)
trapz(ROCsdat$FPR, ROCsdat$TPR)
plot(TPR ~ FPR, data = ROCsdat, xlim = c(0,1), ylim = c(0,1), type="b", pch = 25, bg = "black")
text(TPR ~ FPR, data = ROCsdat, pos = 3, labels = ROCsdat$cutpoint)
abline(0, 1, col="lightgrey")
##########
library(AUC)
library(flux)
## The emission vector (data in mg CH4 / m2*h) as a time series.
ghg <- ts(c(12.3, 14.7, 17.3, 13.2, 8.5, 7.7, 6.4, 3.2, 39.8,
22.3, 24.7, 15.6, 17.4), start=0, end=24, frequency=0.5)
## Have a look at the emission development.
##plot(ghg)
## Calculate what has been emitted that day
## Assuming that emissions develop linearly between
## measurements
auc(time(ghg), ghg)
## The effect of below.zero:
## Shift data, so that we have negative emissions (immissions)
ghg <- ghg-10
## See the difference
plot(ghg, main = paste("Auc: ", auc(time(ghg), ghg), "| AUC thres =0: ", auc(time(ghg), ghg, thresh = 0)), ylab="Data", pch=20, col="blue", type ="o")
abline(h=0)
## With thresh = NULL the negative emissions are subtracted
## from the positive emissions
auc(time(ghg), ghg)
## With thresh = 0 the negative emissions are set to 0
## and only the emissions >= 0 are counted.
auc(time(ghg), ghg, thresh = 0)
x <- 1:25
ghg <- ts(x^2, start=0, end=24, frequency=0.5)
auc(time(ghg), ghg)
ghg <- ghg-10
plot(ghg, main = paste("Auc: ", auc(time(ghg), ghg), "| AUC thres =0: ", auc(time(ghg), ghg, thresh = 0)), ylab="Data", pch=20, col="blue", type ="o")
auc(time(ghg), ghg, thresh = 0)
auc(time(ghg), ghg)
abline(h=0)
print("hello")
print(as.numeric(args[1]) * as.numeric(args[2]))
2 * as.numeric("hello")
dataBase <- read.csv("idDatabase (1).csv")
list.files()
setwd("C:/Users/HSamuelson/Documents/GitHub/APSDE/VEP/vep/")
getwd()
tryCatch()
dataBase <- read.csv("idDatabase (1).csv")
dataBase$id == 2977
dataBase$id[2977]
dataBase$id == 2977
dataBase$id[1]
dataBase$id[2]
votes <- read.csv("votesTEMP.csv")
votes$MajaAyush
votes$MajaAyush += 1
votes$MajaAyush = votes$MajaAyush + 1
votes$MajaAyush += 1
votes$MajaAyush
votes[1]
votes[2]
votes[2] = 1
votes[2]
subset(dataBase, dataBase$id == 2977)
subset(dataBase, dataBase$id == 2977)$hasvoted = 1
subset(dataBase, dataBase$id == 2977)$hasvoted
subset(dataBase, dataBase$id == 2977)$hasvoted <- 1
subset(dataBase, dataBase$id == 3454)
subset(dataBase, dataBase$id == 3454)[,]
subset(dataBase, dataBase$id == 3454)[,1]
subset(dataBase, dataBase$id == 3454)[1,]
dataBase <- read.csv("idDatabase (1).csv")
votes <- read.csv("votesTEMP.csv")
subset(dataBase, dataBase$id == 3454)
subset(dataBase, dataBase$id == 3454)$easyInde
subset(dataBase, dataBase$id == 3454)$easyIndex
subset(dataBase, dataBase$id == 3454)$easyIn
subset(dataBase, dataBase$id == 3454)$eas
subset(dataBase, dataBase$id == 3454)$gerger
subset(dataBase, dataBase$id == 3454)$eas
subset(dataBase, dataBase$id == 3454)$e
dataBase[subset(dataBase, dataBase$id == 3454)$e]
dataBase[subset(dataBase, dataBase$id == 3454)$easyindex]
dataBase[subset(dataBase, dataBase$id == 3454)$easyIndex]
dataBase[subset(dataBase, dataBase$id == 3454)$easyIndex, 1]
dataBase[subset(dataBase, dataBase$id == 3454)$easyIndex, ]
dataBase[subset(dataBase, dataBase$id == 3454)$easyIndex, ]$hasvoted
dataBase[subset(dataBase, dataBase$id == 3454)$easyIndex, ]$hasvoted = 1
dataBase[subset(dataBase, dataBase$id == 3454)$easyIndex, ]$hasvoted
dataBase[subset(dataBase, dataBase$id == 3454)$easyIndex, ]
cotes
votes
dataBase[subset(dataBase, dataBase$id == 3454)$easyIndex, ]$hasvoted = 1
subset(dataBase, dataBase$id == idq)$hasVoted == 0)
subset(dataBase, dataBase$id == idq)$hasVoted == 0
subset(dataBase, dataBase$id == 2977)$hasVoted == 0
subset(dataBase, dataBase$id == 2799)$hasVoted == 0
subset(dataBase, dataBase$id == 2977)
subset(dataBase, dataBase$id == 2977)$hasvoted
subset(dataBase, dataBase$id == 2977)$hasvoted == 0
(subset(dataBase, dataBase$id == 2977)$hasvoted == 00 & 1==1
)
(subset(dataBase, dataBase$id == 2977)$hasvoted == 00 & 2==1
)
(subset(dataBase, dataBase$id == 2977)$hasvoted == 00 & 2!=1)
2 != 1
