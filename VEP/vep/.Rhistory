Inf
install.packages("pracma")
library(pracma)
trapz(ROCsdat$FPR, ROCsdat$TPR)
plot(TPR ~ FPR, data = ROCsdat, xlim = c(0,1), ylim = c(0,1), type="b", pch = 25, bg = "black")
text(TPR ~ FPR, data = ROCsdat, pos = 3, labels = ROCsdat$cutpoint)
abline(0, 1, col="lightgrey")
ROCsdata
ROCsdat <- data.frame(cutpoint = c(-Inf, 5, 7, 9, Inf), TPR = c(0, 0.56, 0.78, 0.91, 1), FPR = c(0, 0.01, 0.19, 0.58, 1))
ROCsdat
library(pracma)
trapz(ROCsdat$FPR, ROCsdat$TPR)
plot(TPR ~ FPR, data = ROCsdat, xlim = c(0,1), ylim = c(0,1), type="b", pch = 25, bg = "black")
text(TPR ~ FPR, data = ROCsdat, pos = 3, labels = ROCsdat$cutpoint)
abline(0, 1, col="lightgrey")
## The emission vector (data in mg CH4 / m2*h) as a time series.
ghg <- ts(c(12.3, 14.7, 17.3, 13.2, 8.5, 7.7, 6.4, 3.2, 19.8,
22.3, 24.7, 15.6, 17.4), start=0, end=24, frequency=0.5)
## Have a look at the emission development.
plot(ghg)
## Calculate what has been emitted that day
## Assuming that emissions develop linearly between
## measurements
auc(time(ghg), ghg)
## The effect of below.zero:
## Shift data, so that we have negative emissions (immissions)
ghg <- ghg-10
## See the difference
plot(ghg)
abline(h=0)
## With thresh = NULL the negative emissions are subtracted
## from the positive emissions
auc(time(ghg), ghg)
## With thresh = 0 the negative emissions are set to 0
## and only the emissions >= 0 are counted.
auc(time(ghg), ghg, thresh = 0)
install.packages("flux")
## The emission vector (data in mg CH4 / m2*h) as a time series.
ghg <- ts(c(12.3, 14.7, 17.3, 13.2, 8.5, 7.7, 6.4, 3.2, 19.8,
22.3, 24.7, 15.6, 17.4), start=0, end=24, frequency=0.5)
## Have a look at the emission development.
plot(ghg)
## Calculate what has been emitted that day
## Assuming that emissions develop linearly between
## measurements
auc(time(ghg), ghg)
## The effect of below.zero:
## Shift data, so that we have negative emissions (immissions)
ghg <- ghg-10
## See the difference
plot(ghg)
abline(h=0)
## With thresh = NULL the negative emissions are subtracted
## from the positive emissions
auc(time(ghg), ghg)
## With thresh = 0 the negative emissions are set to 0
## and only the emissions >= 0 are counted.
auc(time(ghg), ghg, thresh = 0)
install.packages("auc")
install.packages("AUC")
## The emission vector (data in mg CH4 / m2*h) as a time series.
ghg <- ts(c(12.3, 14.7, 17.3, 13.2, 8.5, 7.7, 6.4, 3.2, 19.8,
22.3, 24.7, 15.6, 17.4), start=0, end=24, frequency=0.5)
## Have a look at the emission development.
plot(ghg)
## Calculate what has been emitted that day
## Assuming that emissions develop linearly between
## measurements
auc(time(ghg), ghg)
## The effect of below.zero:
## Shift data, so that we have negative emissions (immissions)
ghg <- ghg-10
## See the difference
plot(ghg)
abline(h=0)
## With thresh = NULL the negative emissions are subtracted
## from the positive emissions
auc(time(ghg), ghg)
## With thresh = 0 the negative emissions are set to 0
## and only the emissions >= 0 are counted.
auc(time(ghg), ghg, thresh = 0)
library(auc)
library(AUC)
## The emission vector (data in mg CH4 / m2*h) as a time series.
ghg <- ts(c(12.3, 14.7, 17.3, 13.2, 8.5, 7.7, 6.4, 3.2, 19.8,
22.3, 24.7, 15.6, 17.4), start=0, end=24, frequency=0.5)
## Have a look at the emission development.
plot(ghg)
## Calculate what has been emitted that day
## Assuming that emissions develop linearly between
## measurements
auc(time(ghg), ghg)
## The effect of below.zero:
## Shift data, so that we have negative emissions (immissions)
ghg <- ghg-10
## See the difference
plot(ghg)
abline(h=0)
## With thresh = NULL the negative emissions are subtracted
## from the positive emissions
auc(time(ghg), ghg)
## With thresh = 0 the negative emissions are set to 0
## and only the emissions >= 0 are counted.
auc(time(ghg), ghg, thresh = 0)
library(flux)
## The emission vector (data in mg CH4 / m2*h) as a time series.
ghg <- ts(c(12.3, 14.7, 17.3, 13.2, 8.5, 7.7, 6.4, 3.2, 19.8,
22.3, 24.7, 15.6, 17.4), start=0, end=24, frequency=0.5)
## Have a look at the emission development.
plot(ghg)
## Calculate what has been emitted that day
## Assuming that emissions develop linearly between
## measurements
auc(time(ghg), ghg)
## The effect of below.zero:
## Shift data, so that we have negative emissions (immissions)
ghg <- ghg-10
## See the difference
plot(ghg)
abline(h=0)
## With thresh = NULL the negative emissions are subtracted
## from the positive emissions
auc(time(ghg), ghg)
## With thresh = 0 the negative emissions are set to 0
## and only the emissions >= 0 are counted.
auc(time(ghg), ghg, thresh = 0)
library(AUC)
library(flux)
## The emission vector (data in mg CH4 / m2*h) as a time series.
ghg <- ts(c(12.3, 14.7, 17.3, 13.2, 8.5, 7.7, 6.4, 3.2, 119.8,
22.3, 24.7, 15.6, 17.4), start=0, end=24, frequency=0.5)
## Have a look at the emission development.
plot(ghg)
## Calculate what has been emitted that day
## Assuming that emissions develop linearly between
## measurements
auc(time(ghg), ghg)
## The effect of below.zero:
## Shift data, so that we have negative emissions (immissions)
ghg <- ghg-10
## See the difference
plot(ghg)
abline(h=0)
## With thresh = NULL the negative emissions are subtracted
## from the positive emissions
auc(time(ghg), ghg)
## With thresh = 0 the negative emissions are set to 0
## and only the emissions >= 0 are counted.
auc(time(ghg), ghg, thresh = 0)
ROCsdat <- data.frame(cutpoint = c(-Inf, 5, 7, 9, Inf), TPR = c(0, 0.56, 0.78, 0.91, 1), FPR = c(0, 0.01, 0.19, 0.58, 1))
library(pracma)
trapz(ROCsdat$FPR, ROCsdat$TPR)
plot(TPR ~ FPR, data = ROCsdat, xlim = c(0,1), ylim = c(0,1), type="b", pch = 25, bg = "black")
text(TPR ~ FPR, data = ROCsdat, pos = 3, labels = ROCsdat$cutpoint)
abline(0, 1, col="lightgrey")
##########
library(AUC)
library(flux)
## The emission vector (data in mg CH4 / m2*h) as a time series.
ghg <- ts(c(12.3, 14.7, 17.3, 13.2, 8.5, 7.7, 6.4, 3.2, 19.8,
22.3, 24.7, 15.6, 17.4), start=0, end=24, frequency=0.5)
## Have a look at the emission development.
plot(ghg)
## Calculate what has been emitted that day
## Assuming that emissions develop linearly between
## measurements
auc(time(ghg), ghg)
## The effect of below.zero:
## Shift data, so that we have negative emissions (immissions)
ghg <- ghg-10
## See the difference
plot(ghg)
abline(h=0)
## With thresh = NULL the negative emissions are subtracted
## from the positive emissions
auc(time(ghg), ghg)
## With thresh = 0 the negative emissions are set to 0
## and only the emissions >= 0 are counted.
auc(time(ghg), ghg, thresh = 0)
library(AUC)
library(flux)
## The emission vector (data in mg CH4 / m2*h) as a time series.
ghg <- ts(c(12.3, 14.7, 17.3, 13.2, 8.5, 7.7, 6.4, 3.2, 19.8,
22.3, 24.7, 15.6, 17.4), start=0, end=24, frequency=0.5)
## Have a look at the emission development.
plot(ghg)
## Calculate what has been emitted that day
## Assuming that emissions develop linearly between
## measurements
auc(time(ghg), ghg)
## The effect of below.zero:
## Shift data, so that we have negative emissions (immissions)
ghg <- ghg-10
## See the difference
plot(ghg, main = "Auc: ", auc(time(ghg), ghg), ", AUC thres =0: ", auc(time(ghg), ghg, thresh = 0))
abline(h=0)
## With thresh = NULL the negative emissions are subtracted
## from the positive emissions
auc(time(ghg), ghg)
## With thresh = 0 the negative emissions are set to 0
## and only the emissions >= 0 are counted.
auc(time(ghg), ghg, thresh = 0)
ROCsdat <- data.frame(cutpoint = c(-Inf, 5, 7, 9, Inf), TPR = c(0, 0.56, 0.78, 0.91, 1), FPR = c(0, 0.01, 0.19, 0.58, 1))
library(pracma)
trapz(ROCsdat$FPR, ROCsdat$TPR)
plot(TPR ~ FPR, data = ROCsdat, xlim = c(0,1), ylim = c(0,1), type="b", pch = 25, bg = "black")
text(TPR ~ FPR, data = ROCsdat, pos = 3, labels = ROCsdat$cutpoint)
abline(0, 1, col="lightgrey")
##########
library(AUC)
library(flux)
## The emission vector (data in mg CH4 / m2*h) as a time series.
ghg <- ts(c(12.3, 14.7, 17.3, 13.2, 8.5, 7.7, 6.4, 3.2, 19.8,
22.3, 24.7, 15.6, 17.4), start=0, end=24, frequency=0.5)
## Have a look at the emission development.
plot(ghg)
## Calculate what has been emitted that day
## Assuming that emissions develop linearly between
## measurements
auc(time(ghg), ghg)
## The effect of below.zero:
## Shift data, so that we have negative emissions (immissions)
ghg <- ghg-10
## See the difference
plot(ghg, main = paste("Auc: ", auc(time(ghg), ghg), ", AUC thres =0: ", auc(time(ghg), ghg, thresh = 0)))
abline(h=0)
## With thresh = NULL the negative emissions are subtracted
## from the positive emissions
auc(time(ghg), ghg)
## With thresh = 0 the negative emissions are set to 0
## and only the emissions >= 0 are counted.
auc(time(ghg), ghg, thresh = 0)
plot(ghg, main = paste("Auc: ", auc(time(ghg), ghg), ", AUC thres =0: ", auc(time(ghg), ghg, thresh = 0)), ylab="Data", pch=20)
abline(h=0)
plot(ghg, main = paste("Auc: ", auc(time(ghg), ghg), ", AUC thres =0: ", auc(time(ghg), ghg, thresh = 0)), ylab="Data", pch=20, col="blue")
plot(ghg, main = paste("Auc: ", auc(time(ghg), ghg), ", AUC thres =0: ", auc(time(ghg), ghg, thresh = 0)), ylab="Data", pch=20, col="blue", type ="o")
abline(h=0)
plot(ghg)
ROCsdat <- data.frame(cutpoint = c(-Inf, 5, 7, 9, Inf), TPR = c(0, 0.56, 0.78, 0.91, 1), FPR = c(0, 0.01, 0.19, 0.58, 1))
library(pracma)
trapz(ROCsdat$FPR, ROCsdat$TPR)
plot(TPR ~ FPR, data = ROCsdat, xlim = c(0,1), ylim = c(0,1), type="b", pch = 25, bg = "black")
text(TPR ~ FPR, data = ROCsdat, pos = 3, labels = ROCsdat$cutpoint)
abline(0, 1, col="lightgrey")
##########
library(AUC)
library(flux)
## The emission vector (data in mg CH4 / m2*h) as a time series.
ghg <- ts(c(12.3, 14.7, 17.3, 13.2, 8.5, 7.7, 6.4, 3.2, 19.8,
22.3, 24.7, 15.6, 17.4), start=0, end=24, frequency=0.5)
## Have a look at the emission development.
##plot(ghg)
## Calculate what has been emitted that day
## Assuming that emissions develop linearly between
## measurements
auc(time(ghg), ghg)
## The effect of below.zero:
## Shift data, so that we have negative emissions (immissions)
ghg <- ghg-10
## See the difference
plot(ghg, main = paste("Auc: ", auc(time(ghg), ghg), ", AUC thres =0: ", auc(time(ghg), ghg, thresh = 0)), ylab="Data", pch=20, col="blue", type ="o")
abline(h=0)
## With thresh = NULL the negative emissions are subtracted
## from the positive emissions
auc(time(ghg), ghg)
## With thresh = 0 the negative emissions are set to 0
## and only the emissions >= 0 are counted.
auc(time(ghg), ghg, thresh = 0)
plot(ghg, main = paste("Auc: ", auc(time(ghg), ghg), "| AUC thres =0: ", auc(time(ghg), ghg, thresh = 0)), ylab="Data", pch=20, col="blue", type ="o")
abline(h=0)
ROCsdat <- data.frame(cutpoint = c(-Inf, 5, 7, 9, Inf), TPR = c(0, 0.56, 0.78, 0.91, 1), FPR = c(0, 0.01, 0.19, 0.58, 1))
library(pracma)
trapz(ROCsdat$FPR, ROCsdat$TPR)
plot(TPR ~ FPR, data = ROCsdat, xlim = c(0,1), ylim = c(0,1), type="b", pch = 25, bg = "black")
text(TPR ~ FPR, data = ROCsdat, pos = 3, labels = ROCsdat$cutpoint)
abline(0, 1, col="lightgrey")
##########
library(AUC)
library(flux)
## The emission vector (data in mg CH4 / m2*h) as a time series.
ghg <- ts(c(12.3, 14.7, 17.3, 13.2, 8.5, 7.7, 6.4, 3.2, 39.8,
22.3, 24.7, 15.6, 17.4), start=0, end=24, frequency=0.5)
## Have a look at the emission development.
##plot(ghg)
## Calculate what has been emitted that day
## Assuming that emissions develop linearly between
## measurements
auc(time(ghg), ghg)
## The effect of below.zero:
## Shift data, so that we have negative emissions (immissions)
ghg <- ghg-10
## See the difference
plot(ghg, main = paste("Auc: ", auc(time(ghg), ghg), "| AUC thres =0: ", auc(time(ghg), ghg, thresh = 0)), ylab="Data", pch=20, col="blue", type ="o")
abline(h=0)
## With thresh = NULL the negative emissions are subtracted
## from the positive emissions
auc(time(ghg), ghg)
## With thresh = 0 the negative emissions are set to 0
## and only the emissions >= 0 are counted.
auc(time(ghg), ghg, thresh = 0)
x <- 1:25
ghg <- ts(x^2, start=0, end=24, frequency=0.5)
auc(time(ghg), ghg)
ghg <- ghg-10
plot(ghg, main = paste("Auc: ", auc(time(ghg), ghg), "| AUC thres =0: ", auc(time(ghg), ghg, thresh = 0)), ylab="Data", pch=20, col="blue", type ="o")
auc(time(ghg), ghg, thresh = 0)
auc(time(ghg), ghg)
abline(h=0)
print("hello")
setwd("C:/Users/HSamuelson/Desktop/Physics/Tri3/")
convave <- read.csv('concaveData.csv')
plot(concave)
plot(concave)
convave <- as.data.frame(read.csv('concaveData.csv'))
plot(concave)
convave <- read.csv('concaveData.csv')
dat <- read.csv('concaveData.csv')
plot(dat)
plot(dat, main="Imiage Distance Over time", xlab = "Object Distance [m]", ylab = "Image Distance [m]")
plot(dat, main="Imiage Distance Over time", xlab = "Object Distance [m]", ylab = "Image Distance [m]", pch=20, col="blue")
plot(dat, main="Imiage Distance Over time", xlab = "Object Distance [m]", ylab = "Image Distance [m]", pch=20, col="blue", type="o")
abline(trend1, col  = "red")
trend1 <- lm(dat$id  ~dat$od)
abline(trend1, col  = "red")
setwd("C:/Users/HSamuelson/Desktop/Physics/Tri3/")
dat <- read.csv('concaveData.csv')
plot(dat$od, dat$id main="Imiage Distance Over time", xlab = "Object Distance [m]", ylab = "Image Distance [m]", pch=20, col="blue", type="o")
plot(dat$od, dat$id, main="Imiage Distance Over time", xlab = "Object Distance [m]", ylab = "Image Distance [m]", pch=20, col="blue", type="o")
trend1 <- lm(dat$id  ~dat$od)
abline(trend1, col  = "red")
plot(dat)
plot(dat$odr, dat$idr)
plot(dat$odr, dat$idr, main="1 /Imiage Distance Over time", xlab = "1/ Object Distance [m]", ylab = "1 /Image Distance [m]", pch=20, col="blue", type="o")
plot(dat$od, dat$id, main="Imiage Distance Over time", xlab = "Object Distance [m]", ylab = "Image Distance [m]", pch=20, col="blue", type="o")
dat <- read.csv('concaveData.csv')
plot(dat$rsum)
x <- 1:100
plot(log(x))
plot(1/log(x))
plot(dat$odr, dat$idr, main="1 /Imiage Distance Over time", xlab = "1/ Object Distance [m]", ylab = "1 /Image Distance [m]", pch=20, col="blue", type="o")
plot(dat$rsum)
plot(dat$rsum, c(1:length(dat$rsum)))
plot(c(1:length(dat$rsum)) ,dat$rsum)
ind <-c(1:length(dat$rsum))
plot(ind ,dat$rsum)
trend2 <- lm(dat$rsum ~ (1/log(ind)))
abline(trend2)
trend2 <- 1/log(ind)
abline(trend2)
points(rend2)
points(trend2)
trend2
trend2[1]
ind
points(1/log(1:7))
plot(1/log(1:7))
log(1)
points(dat$rsum)
dat$rsum
dat$idr
pch
plot(dat$odr, dat$idr, main="1 /Imiage Distance Over time", xlab = "1/ Object Distance [m]", ylab = "1 /Image Distance [m]", pch=20, col="blue", type="o")
points(1/log(ind))
points(1/log(dat$odr))
dat$odr
getwd()
setwd(getwd)
setwd(getwd())
getwd()
setwd("C:/Users/HSamuelson/Documents/GitHub/APSDE/VEP/vep/")
dataBase <- read.csv("idDatabase (1).csv")
subset(dataBase$id = 3434)
subset(dataBase$id = 2977)
subset(dataBase, dataBase$id = 2977)
subset(dataBase, dataBase$id == 2977)
subset(dataBase, dataBase$id == 2977 | dataBase$name == "WaltzerAdam")
subset(dataBase, dataBase$id == 2977 | dataBase$name == "WaltzzerAdam")
subset(dataBase, dataBase$id == 2977 & dataBase$name == "WaltzzerAdam")
subset(dataBase, dataBase$id == 2977 & dataBase$name == "WaltzerAdam")
subset(dataBase, dataBase$id == 2977 & dataBase$name == "WaltzzerAdam")
subset(dataBase, dataBase$id == 2977 & dataBase$name == "WaltzzerAdam") == T
subset(dataBase, dataBase$id == 2977 & dataBase$name == "WaltzzerAdam") == T
subset(dataBase, dataBase$id == 2977 & dataBase$name == "WaltzerAdam")
subset(dataBase, dataBase$id == 2977)
subset(dataBase, dataBase$id == 2977)$name
process <- function(idq, nameq){
final <- numeric(0)
if((subset(dataBase, dataBase$id == idq)$name == nameq)& subset(dataBase, dataBase$name== nameq)$id == idq){
final[1] <- 1
} else {
final[1]
}
}
process(2977, "WaltzerAdam")
process <- function(idq, nameq){
final <- numeric(0)
if((subset(dataBase, dataBase$id == idq)$name == nameq)& subset(dataBase, dataBase$name== nameq)$id == idq){
final[1] <- 1
} else {
final[1]
}
return(final)
}
process(2977, "WaltzerAdam")
process(2977, "WaltzzerAdam")
tryCatch(subset(dataBase, dataBase$id == 2977)$name == "Waltzer"))
tryCatch(subset(dataBase, dataBase$id == 2977)$name == "Waltzer")
T + F
T + T
F + F
process <- function(idq, nameq){
final <- numeric(0)
if(tryCatch(subset(dataBase, dataBase$id == idq)$name == nameq))+ trycatch(subset(dataBase, dataBase$name== nameq)$id == idq) == 2){
final[1] <- 1
} else {
final[1]
}
return(final)
}
process <- function(idq, nameq){
final <- numeric(0)
if(tryCatch(subset(dataBase, dataBase$id == idq)$name == nameq) + trycatch(subset(dataBase, dataBase$name== nameq)$id == idq) == 2){
final[1] <- 1
} else {
final[1]
}
return(final)
}
if(tryCatch(subset(dataBase, dataBase$id == idq)$name == nameq) + trycatch(subset(dataBase, dataBase$name== nameq)$id == idq) == 2){
final[1] <- 1
} else {
final[1]
}
process(2977, "WaltzerAdam")
process <- function(idq, nameq){
final <- numeric(0)
if(tryCatch(subset(dataBase, dataBase$id == idq)$name == nameq) + tryCatch(subset(dataBase, dataBase$name== nameq)$id == idq) == 2){
final[1] <- 1
} else {
final[1]
}
return(final)
}
process(2977, "WaltzerAdam")
process(2977, "WaltzzerAdam")
tryCatch(subset(dataBase, dataBase$id == 2977)$name == "WaltzerAdam")
tryCatch(subset(dataBase, dataBase$id == 2977)$name == "WaltzerAdam") +1
process <- function(idq, nameq){
final <- numeric(0)
if((tryCatch(subset(dataBase, dataBase$id == idq)$name == nameq) + tryCatch(subset(dataBase, dataBase$name== nameq)$id == idq)) == 2){
final[1] <- 1
} else {
final[1]
}
return(final)
}
process(2977, "WaltzerAdam")
process(2977, "WaltzzerAdam")
tryCatch(subset(dataBase, dataBase$id == 2977)$name == "WaltzerAdam")
tryCatch(subset(dataBase, dataBase$id == 2977)$name == "WaltzerAdam") + tryCatch(subset(dataBase, dataBase$name== "WaltzerAdam")$id == 2977)
tryCatch(subset(dataBase, dataBase$id == 2977)$name == "WaltzzerAdam") + tryCatch(subset(dataBase, dataBase$name== "WaltzzerAdam")$id == 2977)
tryCatch(subset(dataBase, dataBase$id == 2977)$name == "WaltzzerAdam") + tryCatch(subset(dataBase, dataBase$name== "WaltzzerAdam")$id == 2977) == 2
F + 1
F
process <- function(idq, nameq){
final <- numeric(0)
if((tryCatch(subset(dataBase, dataBase$id == idq)$name == nameq) + tryCatch(subset(dataBase, dataBase$name== nameq)$id == idq)) * 2 == 4){
final[1] <- 1
} else {
final[1]
}
return(final)
}
process(2977, "WaltzerAdam")
process(2977, "WaltzzerAdam")
(tryCatch(subset(dataBase, dataBase$id == 2977)$name == "WaltzzerAdam") + tryCatch(subset(dataBase, dataBase$name== "WaltzzerAdam")$id == 2977))
(tryCatch(subset(dataBase, dataBase$id == 2977)$name == "WaltzzerAdam") + tryCatch(subset(dataBase, dataBase$name== "WaltzzerAdam")$id == 2977)) * 4
(tryCatch(subset(dataBase, dataBase$id == 2977)$name == "WaltzzerAdam") + tryCatch(subset(dataBase, dataBase$name== "WaltzzerAdam")$id == 2977)) == integer(0)
process <- function(idq, nameq){
final <- numeric(0)
#if((tryCatch(subset(dataBase, dataBase$id == idq)$name == nameq) + tryCatch(subset(dataBase, dataBase$name== nameq)$id == idq)) * 2 == 4){
#  final[1] <- 1
#} else {
#  final[1]
#}
if(tryCatch(subset(dataBase, dataBase$id == idq)) == 1) {
return("yah")
}
return("nah")
}
process(2977, "WaltzerAdam")
tryCatch(subset(dataBase, dataBase$id == idq))
tryCatch(subset(dataBase, dataBase$id == 2977))
tryCatch(subset(dataBase, dataBase$id == idq)$name == nameq)
tryCatch(subset(dataBase, dataBase$id == 2977)$name == nameq)
tryCatch(subset(dataBase, dataBase$id == 2977)$name == "WaltzerAdam")
process <- function(idq, nameq){
final <- numeric(0)
#if((tryCatch(subset(dataBase, dataBase$id == idq)$name == nameq) + tryCatch(subset(dataBase, dataBase$name== nameq)$id == idq)) * 2 == 4){
#  final[1] <- 1
#} else {
#  final[1]
#}
if(tryCatch(subset(dataBase, dataBase$id == idq)$name == nameq)) {
return("yah")
}
return("nah")
}
process(2977, "WaltzerAdam")
process(2977, "WaltzzerAdam")
plot(sin(log(x)))
args <- commandArgs(TRUE)
